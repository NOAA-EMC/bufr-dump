C$$$  MAIN PROGRAM DOCUMENTATION BLOCK
C
C MAIN PROGRAM: BUFR_DUPMAR
C   PRGMMR: DONG             ORG: NP22        DATE: 2020-08-20
C
C ABSTRACT: PROCESSES NON-PROFILE DATABASE REPORT PARTS WITH CORRECTION
C   CHOOSING (SEE REMARKS-1), DUPLICATE CHECKING, REPORT PART MERGING
C   AND TRIMMING TO EXACT TIME WINDOW (DAY DOWN TO MINUTE).  THIS
C   CURRENTLY INCLUDES ALL SURFACE MARINE REPORT TYPES, METAR SURFACE
C   REPORTS AND ALL MESONET SURFACE REPORT TYPES.  THE ALGORITHM SORTS
C   THE REPORT PARTS IN ASCENDING ORDER OF BUFR TABLE (USUALLY ONLY
C   ONE, THE SAME FOR ALL REPORTS, RARELY MORE THAN ONE IF EMBEDDED
C   BUFR TABLES ARE PRESENT IN DATABASE FILE BEING READ) LAT, LON, OBS
C   TIME (DAY DOWN TO MINUTE), REPORT ID, CORRECTION INDICATOR (IF
C   PRESENT, SEE REMARKS-1) AND RECEIPT TIME (YEAR DOWN TO MINUTE). THE
C   REPORT SELECTED IS THE BULLETIN LAST RECEIVED OR CORRECTED (SEE
C   REMARKS-1) FOR MARINE AND METAR REPORTS, OR THE netCDF FILE LAST
C   RECEIVED FOR MESONET REPORTS.  IN THE DUPLICATE CHECKING, REPORTS
C   ARE CHECKED FOR LAT, LON AND OBS TIME (DAY DOWN TO MINUTE) ALL
C   INSIDE THE TOLERANCE LIMITS AS WELL AS REPORT ID'S BEING THE SAME.
C   THE FILE PATH/NAMES OF THE INPUT AND OUTPUT FILES, (OPTIONALLY) THE
C   TIME WINDOW TO TRIM TO AND (OPTIONALLY) DEFAULT OVERRIDE DUP
C   CHECKING TOLERANCE LIMITS ARE READ FROM STANDARD INPUT AT THE START
C   OF THIS PROGRAM.  IF THE TIME WINDOW RECORD IS MISSING, THEN NO
C   TIME WINDOWING IS PERFORMED.  ALL FILE CONNECTIONS (EXCEPT STANDARD
C   INPUT WHICH IS PRE-CONNECTED) ARE MADE THROUGH THE FORTRAN OPEN
C   STATEMENT.
C
C PROGRAM HISTORY LOG:
C 1996-11-26  J. WOOLLEN  ORIGINAL VERSION FOR IMPLEMENTATION
C 1996-11-28  J. WOOLLEN  FIXED LAST REPORT PROBLEM
C 1996-12-02  J. WOOLLEN  FIXED RECEIPT TIME STACK BUG
C 1996-12-04  J. WOOLLEN  FIXED PROBLEM KEEPING DUMP TIME MESSAGES (2)
C 1996-12-12  J. WOOLLEN  DON'T COPY DUMP DATE MESSAGES IF THEY DON'T
C     EXIST
C 1997-07-15  J. WOOLLEN  REMOVE INCORRECT OFFSET FROM ORDERS ARGUMENT
C     NTAB
C 1998-01-07  J. WOOLLEN  FIX A PROBLEM WITH MORE THAN 255 DUPLICATES
C 1998-07-21  J. WOOLLEN  PROTECT MERGE LOOP FROM OUT OF BOUNDS
C     REFERENCE
C 1998-08-14  J. WOOLLEN  DISABLE ABORT CAUSED BY TOO MUCH DATA TO
C     UFBTAM
C 1998-12-02  J. WOOLLEN  Y2K/F90 COMPLIANT
C 1999-06-03  D. KEYSER   MODIFIED TO PORT TO IBM SP AND RUN IN 4 OR
C     8 BYTE STORAGE
C 1999-09-21  D. KEYSER   BUMPED UP REPORT LIMIT FROM 70K TO 100K
C 2000-12-05  D. KEYSER   INCREASED LIMIT FOR I/O FILENAME LENGTH
C     FROM 80 CHARACTERS TO 500 CHARACTERS
C 2002-03-05  D. KEYSER   IMPROVED DOCUMENTATION; IMPROVED STANDARD
C     OUTPUT PRINT; ADDED CALL TO COMPRESS_CHECK TO INDICATE IF INPUT/
C     OUTPUT FILES ARE COMPRESSED OR UNCOMPRESSED; ACCOUNTS FOR CHANGE
C     TO INPUT DUMP FILES AFTER 3/2002 WHERE SEQUENCE "BID" (BULLETIN
C     HEADER DATA) IS NOW REPLICATED FOR ALL UNIQUE PARTS THAT ARE
C     MERGED TO GENERATE A COMPLETE REPORT (IN REVERSE ORDER OF RECEIPT
C     TIME) (PRIOR TO THIS NO REPLICATION OF "BID", ONLY BULLETIN
C     HEADER FROM LATEST REPORT PART IN MERGE STORED) (WILL STILL WORK
C     PROPERLY FOR DUMP FILES PRIOR TO 3/2002); ACCOUNTS FOR CHANGE
C     IN INPUT NON PROFILE BUFR DUMP FILES AFTER 3/2002 WHERE MNEMONIC
C     "BORG" REPLACES "ICLI" IN NOW REPLICATED "BID" SEQUENCE (WILL
C     STILL WORK PROPERLY FOR INPUT UPPER-AIR PROFILE BUFR DUMP FILES
C     PRIOR TO 3/2002); THE REPLICATED RAW REPORT STRING NOW CONTAINS
C     THE RAW REPORT FROM ALL UNIQUE PARTS THAT ARE MERGED TO GENERATE
C     A COMPLETE REPORT (IN REVERSE ORDER OF RECEIPT TIME) (PRIOR TO
C     THIS, ONLY THE RAW REPORT FROM THE LATEST REPORT PART IN MERGE
C     STORED); THE REPLICATED RECEIPT TIME SEQUENCE ("RCPTIM") NOW
C     CONTAINS THE RECEIPT TIMES OF ONLY THOSE UNIQUE PARTS THAT ARE
C     MERGED TO GENERATE A REPORT (IN 1:1 CORRESPONDENCE WITH "BID"
C     REPLICATION, IN REVERSE ORDER OF RECEIPT TIME) (PRIOR TO THIS,
C     "RCPTIM" CONTAINED THE RECEIPT TIME OF ALL PARTS, INCLUDING EXACT
C     DUPLICATES)
C 2004-02-02  D. KEYSER   BUMPED UP REPORT LIMIT FROM 100K TO 300K;
C     MODIFIED TO HANDLE MESONET DATA: CHECKS FOR HIGH-RES LAT/LON
C     (CLATH, CLONH) IF DEFAULT CLAT/CLON MISSING, WILL NOT FAIL IF
C     SEQUENCE "RCPTIM" IS NOT REPLICATED IN BUFR TABLE (THIS IS THE
C     CASE FOR MESONET DATA PRIOR TO 2004), IF "RCPTIM" IS REPLICATED,
C     THE RECEIPT TIMES FOR THE REPORT PARTS USED TO GET MERGED REPORT
C     ARE STORED IN 1:1 CORRESPONDENCE WITH "FILENAME" REPLICATION
C     SEQUENCE (NEW AFTER 2/2004) WHICH CONTAINS THE ORIGINAL FSL
C     netCDF FILENAMES CONTAINING EACH REPORT PART (STORED IN THE RUN-
C     HISTORY ARCHIVE); REPLACED CALL TO IN-LINE SUBROUTINE
C     COMPRESS_CHECK WITH CALL TO NEW BUFRLIB ROUTINE MESGBC
C 2004-09-08  D. KEYSER   FOR METAR REPORTS ONLY, MODIFIED CORRECTION
C     INDICATOR TO TAKE INTO ACCOUNT BOTH WHETHER OR NOT THE REPORT IS
C     CORRECTED (BASED ON CORN) (AS BEFORE) BUT NOW ALSO WHETHER OR NOT
C     THE TYPE OF HOURLY REPORT IS "METAR" VS. SOMETHING ELSE (MOST
C     LIKELY "SPECI") (BASED ON THRPT) - IF TWO DUPLICATE REPORTS ARE
C     BOTH NOT CORRECTED, THEN THE HOURLY REPORT OF TYPE "METAR" WILL
C     BE SELECTED OVER THE HOURLY REPORT OF TYPE "SPECI" (OR WHATEVER)
C     REGARDLESS OF THE RECEIPT TIME (SEE REMARKS-1) {THIS CHANGE WAS
C     MADE BECAUSE THE "SELECTED CITIES" CODE, WHICH USES THIS TO DUMP
C     METAR DATA, WILL NOT USE THE MAX/MIN TEMPERATURE FROM A "SPECI"
C     (SPECIAL) REPORT}; BUMPED UP REPORT LIMIT FROM 300K TO 600K
C 2004-11-15  D. KEYSER   ADDED INLINE VERSION OF BUFRLIB ROUTINE
C     UFBMEM WHICH WILL NOT ABORT WHEN THERE ARE EITHER TOO MANY
C     MESSAGES (> MAXMSG, CURRENTLY SET TO 200K IN BUFRLIB) OR TOO MANY
C     BYTES (> MAXMEM, CURRENTLY SET TO 16 MBYTES IN BUFRLIB) TO BE
C     STORED INTERNALLY - RATHER IT WILL JUST STORE MAXMSG MESSAGES OR
C     MAXMEM BYTES BUT PRINT A DIAGNOSTIC (NOTE: THIS IS A TEMPORARY
C     CHANGE UNTIL THE NEXT VERSION OF THE BUFRLIB IS IMPLEMENTED WITH
C     THE UPDATED UFBMEM)
C 2006-01-31  D. KEYSER   REMOVED IN-LINE VERSION OF UFBMEM (CHANGES
C     NOTED IN PREVIOUS IMPLEMENTATION ARE NOW IN BUFRLIB VERSION)
C 2006-02-02  D. KEYSER   BUMPED UP REPORT LIMIT FROM 600K TO 1.8
C     MILLION
C 2006-03-02  D. KEYSER   NO LONGER HARDWIRED TO COPY "DUMMY" MESSAGES
C     CONTAINING DUMP CENTER TIME AND PROCESSING TIME, RESP. FROM FIRST
C     TWO MESSAGES OF INPUT FILE (AFTER TABLE MSGS) INTO FIRST TWO
C     MESSAGES OF OUTPUT FILE (AFTER TABLE MSGS) BECAUSE INPUT FILE
C     MOST LIKELY WILL NOT CONTAIN THEM AS GENERATION OF DUMMY MESSAGES
C     HAS MOVED FROM PGM BUFR_DUMPMD, WHICH RUNS BEFORE THIS PGM, TO
C     PGM BUFR_COMBFR WHICH RUNS AFTER THIS PGM - EXCEPTION IS WHEN
C     DUMPJB SCRIPT VARIABLE "FORM" IS SET TO 'copy', IN WHICH CASE
C     BUFR_DUMPMD GENERATES DUMMY MESSAGES BECAUSE BUFR_COMBFR DOES NOT
C     RUN -  THIS CODE WILL ONLY COPY THE DUMMY MESSAGES IF DUMPJB
C     SCRIPT VARIABLE "DUMMY_MSGS" (READ IN VIA "GETENV") IS "YES",
C     MEANING THAT THE INPUT FILE DOES CONTAIN DUMMY MESSAGES; IF TIME
C     WINDOW RECORD (LINE 3) IS EMPTY IN STANDARD INPUT, TIME WINDOW
C     TRIMMING LOOP BYPASSED, BASED ON TEST FOR DEFAULT VALUE OF LATEST
C     REQUESTED DATE WHICH IS NOW CORRECTED TO BE 99999999.00_8 (WAS
C     99999999.00 BUT IN 4-BYTE REAL MACHINES THIS COULD BE ROUNDED UP
C     TO 100000000.00 MEANING LASTEST DDHH.hh IN TIME TESTS, BEFORE
C     TIME WINDOW TRIMMING LOOP WAS BYPASSED, WOULD BE 0000 AND ALL
C     REPORTS WOULD BE TRIMMED RATHER THAN RETAINED)
C 2007-03-23  D. KEYSER   INTRODUCED ALLOCATABLE ARRAYS TO AVOID ARRAY
C     OVERFLOW PROBLEMS, DETERMINES SIZE OF ARRAYS BY CALLING UFBTAB
C     WITH NEGATIVE UNIT NUMBER TO SIMPLY COUNT SUBSETS
C 2007-11-07  D. KEYSER   NOW ENCODES INTO MERGED METAR SUBSETS THE
C     VALUE FOR AUTOMATED STATION TYPE (BUFR MNEMONIC "AUTO")
C     ASSOCIATED WITH THE FIRST (LATEST RECEIPT TIME) "PART" WHOSE
C     BULLETIN HEADER CONTAINS A REMARKS SECTION AND WHOSE VALUE FOR
C     "AUTO" IS NON-MISSING {PRIOR TO THIS, THE VALUE FOR "AUTO" FROM
C     THE FIRST (LATEST RECEIPT TIME) "PART" WITH A NON-MISSING VALUE
C     FOR "AUTO" WAS ALWAYS ENCODED INTO THE MERGED METAR SUBSET,
C     REGARDLESS OF WHETHER OR NOT IT CONTAINED A REMARKS SECTION,
C     THIS IS STILL THE CASE WHEN NONE OF THE "PART" BULLETIN HEADERS
C     CONTAIN A REMARKS SECTION} (THIS HAD CAUSED PROBLEMS FOR MDL/TDL
C     BECAUSE MANY LATE-ARRIVING DUPLICATE REPORTS DO NOT CONTAIN A
C     REMARKS SECTION IN THEIR BULLETIN HEADERS AND THUS DO NOT CONTAIN
C     THE PROPER VALUE FOR "AUTO")
C 2008-07-14  D. KEYSER   MDL/TDL DISCOVERED THAT LATE-ARRIVING
C     DUPLICATE METAR REPORTS THAT DO NOT CONTAIN A REMARKS SECTION IN
C     THEIR BULLETIN HEADERS (I.E., "TRUNCATED" REPORTS) ARE DECODED
C     WITH DRY BULB TEMPERATURE (BUFR MNEMONIC "TMDB") AND DEWPOINT
C     TEMPERATURE (BUFR MNEMONIC "TMDP") ROUNDED TO THE NEAREST WHOLE
C     DEG. C RATHER THAN TO THE NEAREST 0.1 DEG. C AS FOR EARLIER
C     RECEIVED DUPLICATE REPORTS THAT DO CONTAIN A REMARKS SECTION -
C     SINCE "TMDB" AND "TMDP" HOLD VALUES TO 0.1 DEG. C PRECISION, AND
C     SINCE "TMDB" AND "TMDP" FROM THE LATE-ARRIVING TRUNCATED
C     DUPLICATE REPORTS UP TO NOW HAD BEEN ENCODED INTO THE FINAL
C     MERGED METAR REPORT, THE LOSS OF PRECISION IN THE TRUNCATED
C     REPORTS IS NOT DESIRABLE - TO CORRECT THIS PROBLEM, THIS CODE IS
C     MODIFIED TO EXPAND THE LOGIC IN THE PREVIOUS (2007-11-07) UPDATE
C     TO ALSO NOW ENCODE INTO MERGED METAR REPORTS THE VALUES FOR
C     "TMDB" AND "TMDP" ASSOCIATED WITH THE FIRST (LATEST RECEIPT TIME)
C     "PART" WHOSE BULLETIN HEADER CONTAINS A REMARKS SECTION AND WHOSE
C     VALUE FOR EITHER "TMDB" OR "TMDP" IS NON-MISSING {PRIOR TO THIS,
C     THE VALUES FOR "TMDB" OR "TMDP" FROM THE FIRST (LATEST RECEIPT
C     TIME) "PART" WITH A NON-MISSING VALUE FOR "TMDB" OR "TMDP" WAS
C     ALWAYS ENCODED INTO THE MERGED METAR REPORT, REGARDLESS OF
C     WHETHER OR NOT IT CONTAINED A REMARKS SECTION, THIS IS STILL THE
C     CASE WHEN NONE OF THE "PART" BULLETIN HEADERS CONTAIN A REMARKS
C     SECTION}; THE SORT IS REARRANGED SO AS TO GIVE REPORT ID
C     PREFERENCE OVER CORRECTION INDICATOR/TYPE OF REPORT, THIS CHANGE
C     IS DUE TO SOME CANADIAN METAR SITES REPORTING (USUALLY HOURLY)
C     WITH TWO OR EVEN THREE DIFFERENT ID'S AT THE SAME LAT/LON AND
C     TIME (E.G., CZTB AND CYQT, AS WELL AS CWKX, CYDL AND CWDL), WHERE
C     ONE SITE IN THE GROUP (E.G., CZTB IN THE FIRST GROUP AND CWKX IN
C     THE SECOND GROUP) ALSO REPORTS TWICE EACH HOUR, ONCE WITH TYPE OF
C     REPORT MISSING (IN THIS CASE ROUNDING REPORTED TEMP AND DWPT TO
C     NEAREST WHOLE DEG) AND AGAIN WITH TYPE OF REPORT SET TO "METAR"
C     (IN THIS CASE STORING TEMP AND DWPT TO THE MORE PRECISE 0.1 DEG)
C     - PRIOR TO THE CHANGE BOTH REPORTS SURVIVED THE DUPLICATE CHECK,
C     AFTER THE CHANGE THE REPORT WITH MISSING TYPE OF REPORT AND LESS
C     PRECISE TEMP AND DWPT IS CORRECTLY TOSSED IN THE DUP-CHECK (NOTE
C     SINCE REPORT ID IS TESTED IN THE DUP-CHECK, THE MULTIPLE REPORT
C     ID'S AT THE SAME LOCATION AND TIME STILL SURVIVE THE DUP-CHECK
C 2010-12-10  D. KEYSER   ALL FOLLOWING CHANGES ARE IN RESPONSE TO THE
C     NEWEST VERSION OF BUFRLIB WHICH NOW ALLOWS FOR THE USE OF
C     EMBEDDED BUFR TABLES: MODIFIED TO CHECK THE NUMBER OF EMBEDDED
C     BUFR TABLES IN THE INPUT DATABASE FILES (INCL. TABLE AT TOP), IF
C     > 1 CREATES A DIAGNOSTIC SCRATCH FILE RECOGNIZED BY DUMPJB
C     (ALERTING IT TO RUN A FOLLOW-UP DUP-CHECK USING BUFR_DUPCOR);
C     SINCE REPORTS ARE OUTPUT IN THE ORDER OF THE DUP-CHECK SORT, NOW
C     USES THE BUFR TABLE INDEX ASSOCIATED WITH EACH REPORT ("ITBL") AS
C     THE PRIMARY SORT KEY FOR PERFORMING DUP-CHECKING AND PART-
C     MERGING, THUS ENSURING THAT THE OUTPUT DUP-CHECKED/MERGED FILE
C     WILL NEVER CONTAIN INTERLEAVED EMBEDDED BUFR TABLES (WHICH CAN
C     TREMENDOUSLY SLOW DOWN SUBSEQUENT CODES TRYING TO READ THIS FILE)
C     (THE DRAWBACK TO SORTING ON BUFR TABLE INDEX IS THAT DUPLICATE
C     REPORTS ACROSS DIFFERENT BUFR TABLES WILL NOT BE CAUGHT, THUS THE
C     NEED TO CALL FOLLOW-UP DUP-CHECK BUFR_DUPCOR) - OF COURSE USUALLY
C     THERE IS ONLY 1 SET OF BUFR TABLES IN THE INPUT DATABASE FILE, IN
C     WHICH CASE BUFR_DUPMAR RUNS JUST AS IT DID PRIOR TO ALL OF THESE
C     CHANGES; THE CHANGE NOTED NEXT WAS ADDED PRIOR TO THE CHANGE TO
C     SORT FIRST ON BUFR TABLE INDEX, THIS IS RETAINED BUT WILL NEVER
C     BE INVOKED SINCE REPORTS FROM TWO DIFFERENT BUFR TABLES CAN NOW
C     NEVER LIE ADJACENT TO EACH OTHER AFTER THE SORT: MODIFIED TO NOT
C     ATTEMPT TO MERGE REPORT "PARTS" WHICH ARE GENERATED FROM
C     DIFFERENT (EMBEDDED) BUFR TABLES IN THE DATABASE FILES AS THIS
C     CAN CAUSE A SEG-FAULT
C 2013-01-14  D. KEYSER   FIXED A BUG WHICH WAS CAUSING AN ARRAY
C     OVERLOW WHEN PARSING THROUGH CONCATENATED REPORT "PART" BULLETIN
C     HEADERS IN THE COURSE OF SEARCHING FOR THE FIRST PART WHOSE
C     BULLETIN HEADER CONTAINS A "REMARKS" SECTION (I.E., THE STRING
C     "RMK") (THIS DID NOT APPEAR TO BE CAUSING ANY PROBLEMS BUT IT WAS
C     CAUSING A SEG-FAULT WHEN COMPILED WITH DEBUGGING TUNRED ON,
C     DEBUGGING NOT TURNED ON IN CCS PRODUCTION)
C 2013-01-15  J. WHITING  PORT TO WCOSS -- ADAPTED IBM/AIX GETENV
C     SUBPROGRAM CALL TO INTEL/LINUX SYNTAX; ADDED NEGATIVE SIGN TO
C     UNIT NUMBER IN MESGBC() CALL; UPDATED DOC BLOCKS; REPLACED TESTS
C     VS BMISS W/ IBFMS FUNCTION; REPLACED EXPLICIT ASSIGNMENT OF BMISS
C     W/ GETBMISS() FUNCTION.
C 2013-01-24  D. KEYSER   PORT TO WCOSS -- REPLACED GETENV WITH
C     MORE STANDARD GET_ENVIRONMENT_VARIABLE; ADDED CLOSBF FOR INPUT
C     BUFR FILE FOLLOWED BY OPEN STATEMENT PRIOR TO CALL TO MESGBC()
C     SINCE THE LATTER NOW CALLS OPENBF INTERNALLY AS PART OF BUFRLIB
C     C-I/O, REMOVED CLOSBF AFTER MESGBC SINCE MESGBC NOW CALLS CLOSBF
C     INTERNALLY - ALLOWS MESGBC() TO REVERT BACK TO POSITIVE SIGN UNIT
C     NUMER AND FUNCTION AS IT DID ON CCS; USE INTRINSIC "TRIM"
C     CHARACTER STRING FUNCTION TO ELIMINATE NEED TO OBTAIN NUMBER OF
C     NON-BLANK CHARACTERS IN STRINGS.
C 2014-11-07  D. KEYSER   DECLARE FUNCTION GETBMISS AND ITS RETURN
C     VALUE BMISS AS REAL*8 TO GET A RELIABLE VALUE FOR BMISS IN PRINT
C     STATEMENTS
C 2020-08-20  J. DONG   ADDED SETBMISS CALL TO SET BMISS TO 10E8 AND
C     CHANGE THE CODE TO AVOID INTEGER OVERFLOW
C 2022-03-25  I. Genkova  Added check for 0 reports in input file and
C     allows for graceful continue in the event of 0 reports.
C
C USAGE:
C   INPUT FILES:
C     UNIT 05  - STANDARD INPUT - FIRST RECORD CONTAINS INPUT FILE
C                NAME, SECOND RECORD CONTAINS OUTPUT FILE NAME,
C                OPTIONAL THIRD RECORD CONTAINS TIME-WINDOWING
C                SPECIFICATIONS (THE YYYYMMDDHH<.HH> DATE OF THE
C                EARLIEST TIME TO DUMP AND THE YYYYMMDDHH<.HH> DATE OF
C                THE LATEST TIME TO DUMP), OPTIONAL FOURTH RECORD
C                CONTAINS DUP-CHECKING TOLERANCE LIMITS (IF FOURTH
C                RECORD IS MISSING, DEFAULT DUP-CHECKING TOLERANCE
C                LIMITS ARE USED, IF THIRD RECORD IS ALSO MISSING, NO
C                TIME WINDOWING IS PERFORMED)
C     UNIT 20  - UNCHECKED, UNCORRECTED, UNMERGED AND UNWINDOWED BUFR
C                DUMP FILE
C
C   OUTPUT FILES:
C     UNIT 06  - STANDARD OUTPUT PRINT
C     UNIT 50  - DUPLICATE CHECKED, CORRECTED, MERGED AND TIME WINDOWED
C                BUFR DUMP FILE
C     UNIT 60  - SCRATCH FILE WHOSE EXISTENCE ALERTS DUMPJB THAT A
C                FOLLOW-UP DUP-CHECK VIA PROGRAM BUFR_DUPCOR MUST BE
C                RUN
C
C   SUBPROGRAMS CALLED:
C     SYSTEM:    - SYSTEM  GET_ENVIRONMENT_VARIABLE
C     LIBRARY:
C       W3NCO    - W3TAGB  W3TAGE ERREXIT
C       W3EMC    - ORDERS 
C       BUFRLIB  - DATELEN OPENBF COPYMG  UFBINT UFBTAM OPENMB WRITSB
C                  UFBMMS  UFBMEM IREADMG CLOSBF RDMEMM READSB INVMRG
C                  MRGINV  MESGBC UFBTAB IBFMS GETBMISS
C
C   EXIT STATES:
C     COND =   0 - SUCCESSFUL RUN
C            > 0 - ABNORMAL RUN
C
C REMARKS:
C     1 - FOR METAR REPORTS, THE CORRECTION INDICATOR HAS THE FOLLOWING
C         VALUES:
C            = 0 - REPORT IS NOT CORRECTED (CORN = 0 OR MISSING)
C                              --  AND  --
C                  HOURLY REPORT TYPE IS NOT "METAR" {THRPT = 1
C                  ("SPECI"), 2 ("LWIS") OR MISSING)}
C            = 1 - REPORT IS NOT CORRECTED (CORN = 0 OR MISSING)
C                              --  AND  --
C                  HOURLY REPORT TYPE IS "METAR" {THRPT = 0)}
C            = 2 - REPORT IS CORRECTED BY REPORT ORIGINATOR (CORN = 1)
C                  (HOURLY REPORT TYPE IS NOT CONSIDERED)
C            = 3 - REPORT IS CORRECTED BY NCEP SDM (CORN = 2)
C                  (HOURLY REPORT TYPE IS NOT CONSIDERED)
C
C         FOR NON-METAR REPORTS, THE CORRECTION INDICATOR HAS THE
C         FOLLOWING VALUES:
C            = 0 - REPORT IS NOT CORRECTED (CORN = 0 OR MISSING)
C            = 2 - REPORT IS CORRECTED BY REPORT ORIGINATOR (CORN = 1)
C            = 3 - REPORT IS CORRECTED BY NCEP SDM (CORN = 2)
C
C         IN THE CASE OF TWO DUPLICATES, THE ONE WITH THE LARGER VALUE
C         FOR CORRECTION INDICATOR WILL ALWAYS BE SELECTED, EVEN IF
C         IT HAS AN EARLIER RECEIPT TIME.
C
C ATTRIBUTES:
C   LANGUAGE: FORTRAN 90
C   MACHINE:  WCOSS
C
C$$$
      PROGRAM BUFR_DUPMAR
 
      PARAMETER (MXTS=7)
 
      REAL(8),ALLOCATABLE :: TAB_8(:,:)
      REAL(8),ALLOCATABLE :: RAB_8(:,:)
      REAL(8),ALLOCATABLE :: REC_8(:,:)
      REAL(8),ALLOCATABLE :: THRPT_8(:)
      INTEGER,ALLOCATABLE :: IWORK(:)
      INTEGER,ALLOCATABLE :: IORD(:)

      COMMON /MRGCOM/ NRPL,NMRG,NAMB,NTOT

      CHARACTER*2040 RAWRPT_str
      CHARACTER*500  FILI,FILO
      CHARACTER*80   TSTR,TSTRH,RSTR,BIDSTR
      CHARACTER*8    SUBSET,CAB7_IREC,CAB7_JREC,CRPID,RAWRPT(255)
      CHARACTER*3    DUMMY_MSGS

      DIMENSION     NDUP(0:5),ISTARTw(10)

      LOGICAL       CORN,THRPT_METAR,WINDOW,MERGE,IDUP

      REAL(8)       ADATE,BDATE,CDATE,DDATE,RDATE,UFBTAB_8
      REAL(8)       BDSTR_8(MXTS,255),BDSTK_8(MXTS,255),BID_8,RCPTIM_8
      REAL(8)       RCTIM_8(MXTS,255),RCSTK_8(MXTS,255),AUTOSTK_8(255)
      REAL(8)       TMDBSTK_8(255),TMDPSTK_8(255)
      REAL(8)       RASTR_8(255),RASTK_8(255),FNSTR_8(255),FNSTK_8(255)
      REAL(8)       TAB7_IREC_8,TAB7_JREC_8,RPID_8,UFBINT_8(3)
      REAL(8)       BMISS,GETBMISS

      EQUIVALENCE   (TAB7_IREC_8,CAB7_IREC),(TAB7_JREC_8,CAB7_JREC)
      EQUIVALENCE   (CRPID,RPID_8),(RAWRPT,RASTK_8,RAWRPT_str)
 
      DATA BIDSTR/'SEQNUM BUHD BORG BULTIM BBB           '/
      DATA TSTR  /'CLAT  CLON  DAYS HOUR MINU CORN RPID  '/
      DATA TSTRH /'CLATH CLONH DAYS HOUR MINU CORN RPID  '/
      DATA RSTR  /'RCYR RCMO RCDY RCHR RCMI RCTS         '/

      DATA ADATE /00000000.00_8/
      DATA BDATE /99999999.00_8/
      DATA DEXY  /.05/
      DATA DDAY  /0/
      DATA DOUR  /0/
      DATA DMIN  /0/
 
C-----------------------------------------------------------------------
C-----------------------------------------------------------------------
      CALL W3TAGB('BUFR_DUPMAR',2022,0084,0062,'NP22')

      print *
      print * ,'---> Welcome to BUFR_DUPMAR - Version 03-25-2022'
      print *

      CALL DATELEN(10)

ccccc CALL OPENBF(0,'QUIET',2) ! Uncomment for extra print from bufrlib

C  ASSIGN DEFAULT VALUE FOR 'MISSING' TO LOCAL BMISS VARIABLE
C  ----------------------------------------------------------

      CALL SETBMISS(10E8_8)
      BMISS = GETBMISS()     ! assign default value for "missing"
      print *
      print *, 'BUFRLIB value for missing is: ',bmiss
      print *

C  SET THE COUNTERS TO INITIAL VALUES
C  ----------------------------------

      ISUB  = 0
      NDUP  = 0
      ITAB  = 0
      NSKIP = 0
      LUBFI = 20
      LUBFJ = 50

C  READ I/O FILENAMES AND ANY OVERRIDE VALUES FOR THINNING PARAMETERS
C  ------------------------------------------------------------------
C     DEFAULT PARAMETERS:
C     ADATE = 00000000.00  LOWER LIMIT FOR DATE/TIME
C     BDATE = 99999999.00  UPPER LIMIT FOR DATE/TIME
C     DEXY = 0.05  TOLERANCE FOR LAT/LON CHECKS
C     DDAY = 0.0   TOLERANCE FOR DAY CHECK
C     DOUR = 0.0   TOLERANCE FOR HOUR CHECK
C     DMIN = 0.0   TOLERANCE FOR MINUTE CHECK
C  -------------------------------------------------
 
      READ(5,'(A)',END=900,ERR=900) FILI
      READ(5,'(A)',END=900,ERR=900) FILO

      READ(5,*,END=1) ADATE,BDATE
      READ(5,*,END=1) DEXY,DDAY,DOUR,DMIN
 
    1 CONTINUE

      IF(BDATE.NE.99999999.00_8) THEN
         PRINT 200, ADATE,BDATE
      ELSE
         PRINT 201
      ENDIF
  200 FORMAT(/'REQUESTED EARLIEST DATE IS ....... ',F15.2/
     .        'REQUESTED LATEST   DATE IS ....... ',F15.2)
  201 FORMAT(/'@@@@ AS REQUESTED, NO TIME WINDOW TRIMMING IS PERFORMED'/
     .        '@@@@ ALL NON-DUPLICATES ARE RETAINED REGARDLESS OF TIME')
      PRINT 202, TRIM(FILI),TRIM(FILO),DEXY,DDAY,DOUR,DMIN
  202 FORMAT(/'UNCHECKED AND UNCORRECTED INPUT FILE IS        '/5X,A/
     .        'DUPLICATE CHECKED AND CORRECTED OUTPUT FILE IS '/5X,A//
     .        'BUFR_DUPMAR PARAMETERS:'/
     .        3X,'TOLERANCE FOR LAT/LON CHECKS (IN DEGREES) .. ',F7.3/
     .        3X,'TOLERANCE FOR YEAR CHECK (** NOT CHECKED **) '/
     .        3X,'TOLERANCE FOR MONTH CHECK (** NOT CHECKED **) '/
     .        3X,'TOLERANCE FOR DAY CHECK (IN DAYS) .......... ',F7.3/
     .        3X,'TOLERANCE FOR HOUR CHECK (IN HOURS) ........ ',F7.3/
     .        3X,'TOLERANCE FOR MINUTE CHECK (IN MINUTES) .... ',F7.3/
     .        3X,'TOLERANCE FOR SECOND CHECK (** NOT CHECKED **) ')
 
C  The post-3/2002 version of the mnemonic tables for marine and METAR
C   reports replicates sequence "BID" (bulletin header data) - check to
C   see which tables are used here (IVER_bid=0 for pre-3/2002 version,
C   IVER_bid=1 for post-3/2002 version)
C
C  The post-2/2004 version of the mnemonic table for mesonet reports
C   replicates sequence "RCPTIM" (report receipt time data) - check to
C   see which table is used here (IVER_rcptim=0 for pre-2/2004 version,
C   IVER_rcptim=1 for post-2/2004 version)
C  -----------------------------------------------------------------

      OPEN(LUBFI,FILE=TRIM(FILI),FORM='UNFORMATTED')
      CALL OPENBF(LUBFI,'IN',LUBFI)
   78 CONTINUE
      IF(IREADMG(LUBFI,SUBSET,IDATE).NE.0) THEN
         PRINT *, '#####BUFR_DUPMAR - NO DATA IN INPUT FILE - STOP'
         CALL W3TAGE('BUFR_DUPMAR')
         CALL ERREXIT(00)
      END IF
      CALL READSB(LUBFI,IRET)
      IF(IRET.NE.0)  GO TO 78
      CALL UFBINT(LUBFI,BID_8,1,1,IVER_bid,'{BID}')
      CALL UFBINT(LUBFI,RCPTIM_8,1,1,IVER_rcptim,'{RCPTIM}')
      CALL CLOSBF(LUBFI)
 
      OPEN(LUBFI,FILE=TRIM(FILI),FORM='UNFORMATTED')

      CALL MESGBC(LUBFI,MSGT,ICOMP)
      IF(ICOMP.EQ.1) THEN
         PRINT'(/"INPUT BUFR FILE MESSAGES   C O M P R E S S E D"/'//
     .    '"FIRST MESSAGE TYPE FOUND IS",I5/)', MSGT
      ELSE  IF(ICOMP.EQ.0) THEN
         PRINT'(/"INPUT BUFR FILE MESSAGES   '//
     .    'U N C O M P R E S S E D"/"FIRST MESSAGE TYPE FOUND IS",I5/)',
     .    MSGT
      ELSE IF(ICOMP.EQ.-1)  THEN
         PRINT'(//"ERROR READING INPUT BUFR FILE - MESSAGE '//
     .    'COMPRESSION UNKNOWN"/)'
      ELSE  IF(ICOMP.EQ.-3)  THEN
         PRINT'(/"INPUT BUFR FILE DOES NOT EXIST"/)'
      ELSE  IF(ICOMP.EQ.-2)  THEN
         PRINT'(/"INPUT BUFR FILE HAS NO DATA MESSAGES"/"FIRST '//
     .    'MESSAGE TYPE FOUND IS",I5/)', MSGT
      ENDIF

C  COUNT THE NUMBER OF SUBSETS IN THE FILE TO ALLOCATE SPACE
C  ---------------------------------------------------------

      OPEN(LUBFI,FILE=TRIM(FILI),FORM='UNFORMATTED')
      CALL OPENBF(0,'QUIET',1) ! will generate diagnostic print if an
                               ! embedded BUFR table is read
      CALL UFBTAB(-LUBFI,UFBTAB_8,1,1,MXTB,' ')
      CALL OPENBF(0,'QUIET',0) ! return to default wrt degree of print

      IF(MXTB.EQ.0) THEN
         PRINT *
         PRINT *, '### WARNING: A total of ZERO input marine reports //
     . //dupmar' 
         PRINT *
         GO TO 400
      ENDIF

      ALLOCATE(TAB_8(MXTS,MXTB),STAT=I);IF(I.NE.0) GOTO 901
      ALLOCATE(RAB_8(MXTS,MXTB),STAT=I);IF(I.NE.0) GOTO 901
      ALLOCATE(REC_8(3,MXTB),STAT=I);   IF(I.NE.0) GOTO 901
      ALLOCATE(THRPT_8(MXTB),STAT=I);   IF(I.NE.0) GOTO 901
      ALLOCATE(IWORK(MXTB)     ,STAT=I);IF(I.NE.0) GOTO 901
      ALLOCATE(IORD(MXTB)      ,STAT=I);IF(I.NE.0) GOTO 901

      TAB_8 = BMISS
      THRPT_8 = BMISS
      RAB_8 = BMISS
      REC_8 = BMISS
      IORD  = 0

C  MAKE A TABLE OUT OF THE LATS, LONS, AND TIME COORDINATES
C   check for possible high accuracy LAT/LON (mesonet reports)
C  -----------------------------------------------------------

      OPEN(LUBFI,FILE=TRIM(FILI),FORM='UNFORMATTED')
C  IG INCREASE MAXMEM FROM DEFAULT 50,000,000 to 120,000,000
      CALL ISETPRM('MAXMEM',120000000)
      CALL UFBMEM(LUBFI,0,IMSG,MUNIT)
      IF(MUNIT.EQ.0) THEN
         PRINT *, '###BUFR_DUPMAR - NO DATA IN INPUT FILE - STOP'
         CALL W3TAGE('BUFR_DUPMAR')
         CALL ERREXIT(00)
      END IF

      CALL UFBTAM(TAB_8,MXTS,MXTB,NTAB,TSTR)
      IF(SUBSET.EQ.'NC000007') CALL UFBTAM(THRPT_8,1,MXTB,NTAB,'THRPT')
      SCALE = 100.
      IF(IBFMS(TAB_8(1,1)).EQ.1) THEN                  ! data missing
         CALL UFBTAM(TAB_8,MXTS,MXTB,NTAB,TSTRH)
         SCALE = 10000.
      ENDIF
      CALL UFBTAM(RAB_8,MXTS,MXTB,NTAB,RSTR)
      CALL UFBTAM(REC_8,3   ,MXTB,NTAB,'IREC ISUB ITBL')
 
      OPEN(LUBFJ,FILE=TRIM(FILO),FORM='UNFORMATTED')
      CALL OPENBF(LUBFJ,'OUT',LUBFI)

      CALL GET_ENVIRONMENT_VARIABLE('DUMMY_MSGS',DUMMY_MSGS)

      IF(DUMMY_MSGS.EQ.'YES') THEN

C  IF INPUT FILE CONTAINS DUMMY MESSAGES CONTAINING THE CENTER TIME AND
C    DUMP TIME (MESSAGES 1 AND 2 AFTER THE TABLE MESSAGES), COPY THEM
C    TO OUTPUT FILE
C  --------------------------------------------------------------------

         DO I=1,2
            CALL RDMEMM(I,SUBSET,IDATE,IRET)
            IF(IRET.NE.0) GO TO 902
            IF(NMSUB(LUBFI).EQ.0) CALL COPYMG(LUBFI,LUBFJ)
         ENDDO
      ENDIF

C  MODIFY THE VALUE OF THE CORRECTION INDICATOR BASED ON THE VALUE
C   READ IN FOR "CORN" (CORRECTION INDICATOR) IN COMBINATION, FOR
C   METAR REPORTS, WITH THE VALUE READ IN FOR "THRPT" (TYPE OF
C   HOURLY REPORT) (SEE REMARKS-1 FOR MORE DETAILS); COUNT THE
C   NUMBER OF BUFR TABLES
C  ---------------------------------------------------------------
 
      NUM_TABLES = 0
      DO N=1,NTAB
cppppp
ccc      print *, 'input subset # ',n,'; from msg ',rec_8(1,n),
ccc  $    '; dictionary = ',rec_8(3,n)
cppppp
         IF(IBFMS(TAB_8(6,N)).EQ.1) THEN               ! data missing
            TAB_8(6,N) = 0    ! Zero values for missing CORN (mesonets)
         ELSE IF(TAB_8(6,N).GE.1) THEN
            TAB_8(6,N) = TAB_8(6,N) + 1  ! Bump up non-zero CORN by 1
         ENDIF
         IF(TAB_8(6,N).EQ.0) THEN
            IF(THRPT_8(N).EQ.0)  TAB_8(6,N) = 1 ! Set TYPE="METAR" to 1
         ENDIF
         NUM_TABLES = MAX(NUM_TABLES,INT(REC_8(3,N)))
      ENDDO

      print'(/"The number of embedded BUFR tables (including at the '//
     $ 'top of the file) read in is ",I0/)', NUM_TABLES
      IF(NUM_TABLES.GT.1) THEN

C  Alert dumpjb that dup-check code BUFR_DUPCOR must be executed after
C   BUFR_DUPMAR completes if > 1 set of BUFR tables is found in input
C  -------------------------------------------------------------------

         OPEN(60,FILE=TRIM(FILI)//'.fort.60',FORM='FORMATTED')
         WRITE(60,'("dumpjb will set DUPE2=\$CORX")')
      ENDIF
 
C  GET A SORTED INDEX OF THE REPORTS KEYED IN THIS ORDER: BUFR TABLE,
C   LAT, LON, OBS TIME, REPORT ID, CORRECTION INDICATOR (%), RECEIPT
C   TIME
C  ------------------------------------------------------------------
C    % - correction takes into account type of hourly report for METARs
 
      CALL ORDERS( 2,IWORK,RAB_8(5,1),IORD,NTAB,MXTS,8,2) ! rcpt minute
      CALL ORDERS(12,IWORK,RAB_8(4,1),IORD,NTAB,MXTS,8,2) ! rcpt hour
      CALL ORDERS(12,IWORK,RAB_8(3,1),IORD,NTAB,MXTS,8,2) ! rcpt day
      CALL ORDERS(12,IWORK,RAB_8(2,1),IORD,NTAB,MXTS,8,2) ! rcpt month
      CALL ORDERS(12,IWORK,RAB_8(1,1),IORD,NTAB,MXTS,8,2) ! rcpt year
      CALL ORDERS(12,IWORK,TAB_8(6,1),IORD,NTAB,MXTS,8,2) ! correction-%
      CALL ORDERS(10,IWORK,TAB_8(7,1),IORD,NTAB,MXTS,8,2) ! report id
      CALL ORDERS(12,IWORK,TAB_8(5,1),IORD,NTAB,MXTS,8,2) ! obs minute
      CALL ORDERS(12,IWORK,TAB_8(4,1),IORD,NTAB,MXTS,8,2) ! obs hour
      CALL ORDERS(12,IWORK,TAB_8(3,1),IORD,NTAB,MXTS,8,2) ! obs day
      CALL ORDERS(12,IWORK,TAB_8(2,1),IORD,NTAB,MXTS,8,2) ! longitude
      CALL ORDERS(12,IWORK,TAB_8(1,1),IORD,NTAB,MXTS,8,2) ! latitude
      CALL ORDERS(12,IWORK,REC_8(3,1),IORD,NTAB,   3,8,2) ! BUFR table
 
C  CALL THE MERGER FOR EACH REPORT GROUP IN THE TIME WINDOW
C  --------------------------------------------------------
 
   10 CONTINUE

      IF(ITAB+1.GT.NTAB) GO TO 20
      NPAR = 0
      JPAR = 0
      IPAR = ITAB+1
      CORN = .FALSE.
      THRPT_METAR = .FALSE.
      IPTR = IORD(IPAR)
 
C  PREPARE TO TRIM EXCESS DATA FROM THE EXACT TIME WINDOW (IF REQUESTED)
C  ---------------------------------------------------------------------

      IF(BDATE.NE.99999999.00_8) THEN
         CDATE = MOD(ADATE,10000._8)
         DDATE = MOD(BDATE,10000._8)
         RDATE = TAB_8(3,IPTR)*1E2 + TAB_8(4,IPTR) + TAB_8(5,IPTR)/60.
         IF(CDATE.LE.DDATE) WINDOW=RDATE.GE.CDATE .AND. RDATE.LE.DDATE
         IF(CDATE.GT.DDATE) WINDOW=
     .                          .NOT.(RDATE.LT.CDATE.AND.RDATE.GT.DDATE)
      ELSE
         WINDOW=.TRUE.
      ENDIF

      DO ITAB=ITAB+1,NTAB
         IREC = IORD(ITAB)
         JREC = IORD(MIN(ITAB+1,NTAB))
cpppp
ccc      print *, 'New input report number (itab) ',itab,' found in ',
ccc  $    'record (irec) ',irec
ccc      print *, 'Next input report number (itab+1) ',itab+1,' found ',
ccc  $   'in record (jrec) ',jrec
cpppp
         TAB7_IREC_8 = TAB_8(7,IREC)
         TAB7_JREC_8 = TAB_8(7,JREC)
cpppp
ccc      print 1789, irec,cab7_irec,(tab_8(ii,irec),ii=1,2),
ccc  $    nint(rec_8(3,irec)),(nint(tab_8(ii,irec)),ii=3,6),
ccc  $    (nint(rab_8(ii,irec)),ii=1,6)
c1789    format('IREC: ',I5,'; STNID: ',A8,';{ LAT: ',F6.2,'; LON: ',
ccc  $    F7.2,'; BTBL: ',I3,'; RPRT DDHHMM: ',3I2.2,'; CORN: ',I3,
ccc  $    '; RCPT YYYYMMDDHHMM: ',I4,4I2.2,' }; RCTS: ',I2)
cpppp
         IDUP=
     .    ABS(TAB_8(1,IREC)-TAB_8(1,JREC)).LE.DEXY
     .    .AND.
     .    ABS(TAB_8(2,IREC)-TAB_8(2,JREC)).LE.DEXY
     .    .AND.
     .    NINT(ABS(TAB_8(3,IREC)-TAB_8(3,JREC))*100.).LE.NINT(DDAY*100.)
     .    .AND.
     .    NINT(ABS(TAB_8(4,IREC)-TAB_8(4,JREC))*100.).LE.NINT(DOUR*100.)
     .    .AND.
     .    NINT(ABS(TAB_8(5,IREC)-TAB_8(5,JREC))*100.).LE.NINT(DMIN*100.)
     .    .AND.
     .    CAB7_IREC.EQ.CAB7_JREC
     .    .AND.
     .    ITAB.LT.NTAB

         IF(IDUP .AND. NINT(REC_8(3,IREC)).NE.NINT(REC_8(3,JREC))) THEN

C  Note if two duplicate reports are from different BUFR tables - these
C   cannot be merged (NOTE: This cannot happen because of a later
C   change in this code to make the BUFR table the primary sort key)
C  --------------------------------------------------------------------

            print 205, tab_8(1,irec),tab_8(2,irec),
     .      (nint(tab_8(ii,irec)),ii=3,6),cab7_irec,tab_8(1,jrec),
     .      tab_8(2,jrec),(nint(tab_8(ii,jrec)),ii=3,6),cab7_jrec,
     .      nint(rec_8(3,irec)),nint(rec_8(3,JREC))
  205 FORMAT(/' ##### Encountered 2 dupl. time/loc rpts (',F10.5,
     . F11.5,3I3,I2,1X,A8,' and ',F10.5,F11.5,3I3,I2,1X,A8,')'/7X,
     . 'generated from different BUFR tables (',I3,' and ',I3,') - ',
     . 'DO NOT attempt to merge'/)
            NSKIP = NSKIP + 1
           print'("A LATER UPDATE TO THIS CODE SHOULD RESULT IN THIS '//
     .      'NEVER HAPPENING - CONTACT DENNIS KEYSER IF YOU SEE THIS '//
     .      ' PRINTOUT!")'
            print *
         ENDIF
         IF(IDUP .and. NINT(REC_8(3,IREC)).EQ.NINT(REC_8(3,JREC))) THEN
            NPAR = NPAR+1   ! This report is a duplicate of the next one
                            !  wrt location and time (the reports may
                            !  have different obs. though)
cpppp
ccc         print *, 'This input report has same time/loc as input ',
ccc  .               'report number ',itab+1,', NPAR = ',npar
ccc         print *, 'BUFR tables ',nint(rec_8(3,IREC)),' and ',
ccc  .      nint(rec_8(3,JREC))
cpppp
         ELSE IF(WINDOW) THEN
            MMRG = 0
            MRAW = 0
            MFIL = 0
cpppp
ccc         print *, 'Ready to loop backwards through ',npar+1, ' dups'
ccc         print *, '##########################'
cpppp
            DO N=IPAR+NPAR,IPAR,-1   ! Loop backwards through all the
                                     !  duplicates (wrt location and
                                     ! time) -loops once for unique rpt
               JPAR = MIN(JPAR+1,255)
               IREP = IORD(N)
               IREC = REC_8(1,IREP)
               ISUB = REC_8(2,IREP)
               CORN = CORN .OR. TAB_8(6,IREP).GT.1
               THRPT_METAR = THRPT_METAR .OR. TAB_8(6,IREP).EQ.1
               CALL UFBMMS(IREC,ISUB,SUBSET,IDATE)
               IF(JPAR.EQ.1) CALL OPENMB(LUBFJ,SUBSET,IDATE)
               LMRG = NMRG
               LRPL = NRPL
               CALL INVMRG(LUBFI,LUBFJ)
               MERGE = LMRG.NE.NMRG .OR. LRPL.NE.NRPL

C  INVMRG MERGES; LMRG!=NMRG OR LRPL!=NRPL INDICATES MERGE OCCURED
C  ---------------------------------------------------------------

               IF(MERGE) THEN  ! MERGE=T indicates the dups have unique
                               !  obs. info and should thus be merged
                               !  these become "parts" of the same rpt
                               !  (Note: The first report in the loop
                               !         always comes here)
                  MMRG = MIN(255,MMRG+1)
                                  ! obtain stn. id for parts in merge
                  IF(MMRG.EQ.1)CALL UFBINT(LUBFI,RPID_8,1,1,IRET,'RPID')
                                  ! save "AUTO", "TMDB" and "TMDP" for
                                  ! every part in merge
                  CALL UFBINT(LUBFI,UFBINT_8,3,1,IRET,'AUTO TMDB TMDP')
                  AUTOSTK_8(MMRG) = UFBINT_8(1)
                  TMDBSTK_8(MMRG) = UFBINT_8(2)
                  TMDPSTK_8(MMRG) = UFBINT_8(3)
cpppp
ccc               print *, 'For MMRG = ',MMRG,' - AUTO = ',ufbint_8(1)
ccc               if(MMRG.gt.1.and.AUTOSTK_8(MMRG).ne.AUTOSTK_8(MMRG-1))
ccc  .             print *, 'AUTO different than for prevous mrgd part'
ccc               print *, 'For MMRG = ',MMRG,' - TMDB = ',ufbint_8(2)
ccc               if(MMRG.gt.1.and.TMDBSTK_8(MMRG).ne.TMDBSTK_8(MMRG-1))
ccc  .             print *, 'TMDB different than for prevous mrgd part'
ccc               print *, 'For MMRG = ',MMRG,' - TMDP = ',ufbint_8(3)
ccc               if(MMRG.gt.1.and.TMDPSTK_8(MMRG).ne.TMDPSTK_8(MMRG-1))
ccc  .             print *, 'TMDP different than for prevous mrgd part'
cpppp
         ! Must reconstruct receipt time (all reports), bulletin header
         !  (marine and METAR reports) and filename (mesonet reports)
         !  data for all parts since INVMRG cannot merge replicated
         !  data
                  CALL UFBINT(LUBFI,RCTIM_8,MXTS,255,IRET,RSTR)
                  CALL UFBINT(LUBFI,BDSTR_8,MXTS,255,IRET,BIDSTR)
                  RCSTK_8(:,MMRG) = RCTIM_8(:,1)
                  BDSTK_8(:,MMRG) = BDSTR_8(:,1)
                  CALL UFBINT(LUBFI,RASTR_8,1,255,IRET,'RRSTG')
                  IF(IRET.GT.0) THEN
                     DO J=1,IRET
                        MRAW = MIN(255,MRAW+1)
                        RASTK_8(MRAW) = RASTR_8(J)
                     ENDDO
                  END IF
                  CALL UFBINT(LUBFI,FNSTR_8,1,255,IRET,'FNSTG')
                  IF(IRET.GT.0) THEN
                     DO J=1,IRET
                        MFIL = MIN(255,MFIL+1)
                        FNSTK_8(MFIL) = FNSTR_8(J)
                     ENDDO
                  END IF
               ENDIF
cpppp
ccc            print *, 'For dupl. = ',n,', MERGE = ',merge,
ccc  .          'MMRG = ',mmrg
cpppp
            ENDDO

C  ADD INFORMATION FROM MERGED REPORTS AND WRITE THE MERGED SUBSET
C  ---------------------------------------------------------------

C  If the mnemonic table for mesonet reports is post-2/2004 (meaning
C   sequence "RCPTIM" is replicated), store the receipt time data for
C   ALL reports that went into making the merged report in 1:1
C   correspondence with sequence "FILENAME" (filename data) which
C   is also replicated in the post-2/2004 mesonet table (only receipt
C   time from last report is stored for merged reports in the pre-
C   2/2004 table and sequence "FILENAME" is not present)
C  ------------------------------------------------------------------

            IF(IVER_rcptim.GT.0 .AND. MMRG.GT.0)
     .       CALL UFBINT(LUBFJ,RCSTK_8,MXTS,MMRG,IRET,RSTR)
            IF(MRAW.GT.0) THEN
               CALL UFBINT(LUBFJ,RASTK_8,1,MRAW,IRET,'RRSTG')

               IF(SUBSET.EQ.'NC000007') THEN

C   Logic to ensure that merged METAR contains proper values for
C    "AUTO", "TMDB" and "TMDP"
C   ------------------------------------------------------------

cpppp
ccc               print *,'Concatenated bulletin: ',RAWRPT_str(1:mraw*8)
cpppp
                  IF(MMRG.GT.1) THEN
cpppp
ccc                  print *, 'for # replications= ',mmrg,'RPID= ',crpid
cpppp

C  ... find the starting location (word) of each individual part's
C       bulletin header in the concatenated raw report string (RAWRPT)
C       (each new part bulletin header begins with the stn. id)
C  -------------------------------------------------------------------

                     K = 1
                     ISTARTw = 0
                     DO I=1,MRAW
                        IF(RAWRPT(I)(1:4).EQ.CRPID) THEN

C  ...... a new part's bulletin header has been found, store its
C          starting position (word) in RAWRPT as ISTARTw(K) where K is
C          the number of part bulletin headers found
C         ------------------------------------------------------------

                           ISTARTw(K) = I
                           K = K + 1
                           IF(K.GT.10) THEN ! problem
                              print *,'##### hit limit of 10 part ',
     .                         'bulletin headers!!! - do nothing'
                              GO TO 876
                           END IF
                        END IF
                     END DO
cpppp
ccc                  print *, 'ISTARTw = ',ISTARTw
cpppp

c  ... now read through each of the part bulletin headers and locate
C       the first one with remarks (if there is one)
C      -------------------------------------------------------------

                     IBEGw = 0
                     LOOP1: DO K=1,9
                        IF(ISTARTw(K).EQ.0)  EXIT LOOP1
                        IENDw = ISTARTw(K+1)-1
                        IF(ISTARTw(K+1).EQ.0) IENDw = MRAW
                        ISTARTb = ISTARTw(K)*8-7
                        IENDb   = IENDw*8
cpppp
ccc                     print *, 'K,ISTARTb,IENDb = ',K,ISTARTb,IENDb
cpppp

                        LOOP2: DO J=ISTARTb,IENDb-2
                           IF(RAWRPT_str(J:J+2).EQ.'RMK') THEN

C  ......... a part bulletin header with remarks has been found, encode
C            "AUTO", "TMDB" and "TMDP" based on their values in the
C             part in the merge corresponding to this bulletin header
C             (each one will actually be encoded only if it is non-
C             missing because UFBINT is designed not to overwrite an
C             existing value with a missing value) {store this part
C             bulletin header's starting position (word) in RAWRPT as
C             IBEGw - its ending position (word) in RAWRPT is already
C             stored as IENDw}
C            ----------------------------------------------------------

                              IBEGw = ISTARTw(K)
cpppp
ccc                           print *, 'remarks found in bulletin ',
ccc  .                         'header for part',k,' - encode "AUTO", ',
ccc  .                         '"TMDB" and "TMDP" from this same part ',
ccc  .                         'in the merge'
cpppp
                              CALL UFBINT(LUBFJ,AUTOSTK_8(K),1,1,IRET,
     .                                    'AUTO')
                              CALL UFBINT(LUBFJ,TMDBSTK_8(K),1,1,IRET,
     .                                    'TMDB')
                              CALL UFBINT(LUBFJ,TMDPSTK_8(K),1,1,IRET,
     .                                    'TMDP')
                              EXIT LOOP1 ! no need to keep looping thru
                                         ! bulletin headers
                           END IF
                        END DO LOOP2
                     END DO LOOP1

cpppp
ccc                  if(IBEGw.eq.0) then
ccc 
C ...... come here if none of the part bulletin headers contain
C         remarks, "AUTO", "TMDB" and "TMDP" will be encoded based on
C         their value in the first (latest receipt time) part in the
C         merge with a non-missing value for "AUTO", "TMDB" or "TMDP",
C         respectively by default
C        -------------------------------------------------------------
ccc 
ccc                     print *, 'remarks not found in any part ',
ccc  .                   'bulletin header - encode "AUTO", "TMDB" and ',
ccc  .                   '"TMDP" from first part in merge where "AUTO"',
ccc  .                   ', "TMDB" or "TMDP" are non-missing, ',
ccc  .                   'respectively'
ccc                     nnret = ISTARTw(2) - 1
ccc                     print *, '1-nnret = ',nnret
ccc                     if(nnret.le.0)  then ! problem
ccc                        print *,'##### PROBLEM: nnret .le. 0 !!-do',
ccc  .                      ' nothing'
ccc                        go to 876
ccc                     end if
ccc                     print *, (rawrpt(j),j=1,ISTARTw(2)-1)
ccc                  else
ccc                     nnret = IENDw + 1 - IBEGw
ccc                     print *, '2-nnret = ',nnret
ccc                     print *, (rawrpt(j),j=IBEGw,IENDw)
ccc                  end if
cpppp
                  END IF
               END IF
            ENDIF

  876       CONTINUE

            IF(MFIL.GT.0) CALL UFBINT(LUBFJ,FNSTK_8,1,MFIL,IRET,'FNSTG')

C  If the mnemonic tables for marine and METAR reports are post-3/2002
C   (meaning sequence "BID" is replicated), store the bulletin header
C   data for ALL reports that went into making the merged report in 1:1
C   correspondence with sequence "RCPTIM" (report receipt time) which
C   has always been replicated in the tables (only bulletin header data
C   from last report is stored for merged reports in the pre-3/2002
C   table)
C  ------------------------------------------------------------------

            IF(IVER_bid.GT.0 .AND. MMRG.GT.0)
     .       CALL UFBINT(LUBFJ,BDSTK_8,MXTS,MMRG,IRET,BIDSTR)

cpppp
ccc        call ufbint(-lubfj,ufbint_8,3,1,iret,'AUTO TMDB TMDP')
ccc        print *, 'Encoded value of AUTO in merged report = ',
ccc  .               ufbint_8(1)
ccc        print *, 'Encoded value of TMDB in merged report = ',
ccc  .               ufbint_8(2)
ccc        print *, 'Encoded value of TMDP in merged report = ',
ccc  .               ufbint_8(3)
cpppp
            CALL WRITSB(LUBFJ)
 
            IF(CORN) THEN
               NDUP(1) = NDUP(1)+1 ! Count of corrected rpts output
            ELSE IF(THRPT_METAR) THEN
               NDUP(5) = NDUP(5)+1 ! Count of rpt type METAR rpts output
            ELSE
               NDUP(0) = NDUP(0)+1 ! Count of uncorrected/non-METAR
                                   ! rpts output
            ENDIF
            NDUP(2) = NDUP(2)+NPAR    ! Total duplicate count (wrt
                                      !  location and time)
            NDUP(4) = NDUP(4)+MMRG-1  ! Count of duplicates with unique
                                      !  obs. info (i.e., "parts")
            GO TO 10
         ELSE
cpppp
ccc         print *,'Input report ',itab,' is outside time window, skip'
cpppp
            NDUP(3) = NDUP(3)+NPAR+1  ! Count of rpts outside time wndow
            GO TO 10
         ENDIF
      ENDDO
 
   20 CONTINUE

      CALL CLOSBF(LUBFI)
      CALL CLOSBF(LUBFJ)
      OPEN(LUBFJ,FILE=TRIM(FILO),FORM='UNFORMATTED')
      CALL MESGBC(LUBFJ,MSGT,ICOMP)
      IF(ICOMP.EQ.1) THEN
         PRINT'(/"OUTPUT BUFR FILE MESSAGES   C O M P R E S S E D"/'//
     .    '"FIRST MESSAGE TYPE FOUND IS",I5/)', MSGT
      ELSE  IF(ICOMP.EQ.0) THEN
         PRINT'(/"OUTPUT BUFR FILE MESSAGES   '//
     .    'U N C O M P R E S S E D"/"FIRST MESSAGE TYPE FOUND IS",I5/)',
     .    MSGT
      ELSE IF(ICOMP.EQ.-1)  THEN
         PRINT'(//"ERROR READING OUTPUT BUFR FILE - MESSAGE '//
     .        'COMPRESSION UNKNOWN"/)'
      ELSE  IF(ICOMP.EQ.-3)  THEN
         PRINT'(/"OUTPUT BUFR FILE DOES NOT EXIST"/)'
      ELSE  IF(ICOMP.EQ.-2)  THEN
         PRINT'(/"OUTPUT BUFR FILE HAS NO DATA MESSAGES"/"FIRST '//
     .    'MESSAGE TYPE FOUND IS",I5/)', MSGT
      ENDIF
      CLOSE(LUBFJ)
 
  400 CONTINUE

C  GENERATE REPORT
C  ---------------
 
      PRINT 300, NTAB,NDUP(0)+NDUP(5)+NDUP(1),NDUP(0),NDUP(5),NDUP(1),
     . NDUP(2),NDUP(2)-NDUP(4),NDUP(4),NDUP(3)
  300 FORMAT(/'BUFR_DUPMAR READ IN A TOTAL OF',I8,' REPORTS'//
     .        'TOTAL NUMBER OF REPORTS WRITTEN OUT (SOME CREATED FROM ',
     .                   'THE MERGING OF INPUT REPORTS) ...',I7/
     .        '   NUMBER THAT ARE UNCORRECTED & THRPT!=METAR (EACH ',
     .                   'MERGED PART IS THIS WAY) .',I7/
     .        '   NUMBER THAT ARE UNCORRECTED & THRPT=METAR (EACH ',
     .                   'MERGED PART IS THIS WAY) ..',I7/
     .        '   NUMBER THAT ARE CORRECTED (ONE OR MORE MERGED PART ',
     .                   'IS CORRECTED) ..........',I7/
     .        'TOTAL NUMBER OF DUPLICATE REPORTS (W.R.T. LOCATION AND ',
     .                   'TIME) ...........................',I7/
     .        '   NUMBER OF WHICH ALSO DUPLICATE OBS. DATA - THESE ARE',
     .                   ' SKIPPED ..............',I7/
     .        '   NUMBER OF WHICH HAVE UNIQUE OBS. DATA - THESE ARE ',
     .                   'MERGED INTO WRITTEN RPTS.',I7/ 
     .        'NUMBER OF REPORTS SKIPPED DUE TO:'/
     .        '   BEING OUTSIDE TIME WINDOW FOR TRIMMING ............',
     .                   '..................................',I7/)
      IF(NSKIP.GT.0) THEN
         PRINT 301, NSKIP
  301 FORMAT('NUMBER OF INSTANCES WHERE DUPLICATE REPORTS COULD NOT ',
     . 'BE MERGED DUE TO THEIR HAVING'/'   BEEN GENERATED FROM ',
     . 'DIFFERENT BUFR TABLES .......................................',
     . '....',I7/)
         CALL SYSTEM('[ -n "$jlogfile" ] && $DATA/postmsg'//
     $    ' "$jlogfile" "***WARNING: ONE OR MORE  REPORTS IN OUTPUT '//
     $    'DUMP FILE '//SUBSET//' ARE LOCATION-TIME DUPLICATES '//
     $    'CONTAINING -PARTS-GENERATED BY 2 OR MORE DIFFERENT '//
     $    'EMBEDDED BUFR TABLES"')
      END IF

      CALL MRGINV

C  END OF PROGRAM
C  --------------

      CALL W3TAGE('BUFR_DUPMAR') 
      STOP
 
C  ERROR EXITS
C  -----------
 
  900 CONTINUE

      PRINT *, '#####BUFR_DUPMAR - EOF/ERR READING STDIN'
      CALL W3TAGE('BUFR_DUPMAR')
      CALL ERREXIT(99)

  901 CONTINUE

      PRINT *, '#####BUFR_DUPMAR - UNABLE TO ALLOCATE ARRAYS'
      CALL W3TAGE('BUFR_DUPMAR')
      CALL ERREXIT(99)

  902 CONTINUE

      PRINT'("#####BUFR_DUPMAR - BAD RETURN FROM BUFRLIB ROUTINE '//
     . 'RDMEMM - REQ. MEMORY MSG NO. TO READ IN (",I0,") > NO. OF '//
     . 'MSGS IN MEMORY")', I
      CALL W3TAGE('BUFR_DUPMAR')
      CALL ERREXIT(99)

      END
